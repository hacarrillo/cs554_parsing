strict digraph  {
"command 1";
"command 2";
"command 3";
"newcommand 4";
"assignment 5";
"ID 6";
"x 6";
"ASSIGN 7";
":= 7";
"expression 8";
"term 9";
"term 10";
"factor 11";
"LPAREN 12";
"( 12";
"expression 13";
"expression 14";
"term 15";
"factor 16";
"INT 17";
"1 17";
"PLUS 18";
"+ 18";
"term 19";
"factor 20";
"ID 21";
"y 21";
"RPAREN 22";
") 22";
"TIMES 23";
"* 23";
"factor 24";
"LPAREN 25";
"( 25";
"expression 26";
"expression 27";
"term 28";
"factor 29";
"INT 30";
"1 30";
"PLUS 31";
"+ 31";
"term 32";
"factor 33";
"ID 34";
"z 34";
"RPAREN 35";
") 35";
"SEMICOLON 36";
"newcommand 37";
"assignment 38";
"ID 39";
"z 39";
"ASSIGN 40";
":= 40";
"expression 41";
"expression 42";
"expression 43";
"term 44";
"factor 45";
"ID 46";
"x 46";
"PLUS 47";
"+ 47";
"term 48";
"factor 49";
"ID 50";
"y 50";
"PLUS 51";
"+ 51";
"term 52";
"factor 53";
"ID 54";
"z 54";
"SEMICOLON 55";
"newcommand 56";
"assignment 57";
"ID 58";
"y 58";
"ASSIGN 59";
":= 59";
"expression 60";
"expression 61";
"term 62";
"factor 63";
"ID 64";
"y 64";
"MINUS 65";
"- 65";
"term 66";
"factor 67";
"INT 68";
"2 68";
"SEMICOLON 69";
"newcommand 70";
"command 1" -> "command 2";
"command 1" -> "SEMICOLON 55";
"command 1" -> "newcommand 56";
"command 2" -> "command 3";
"command 2" -> "SEMICOLON 36";
"command 2" -> "newcommand 37";
"command 3" -> "newcommand 4";
"newcommand 4" -> "assignment 5";
"assignment 5" -> "ID 6";
"assignment 5" -> "ASSIGN 7";
"assignment 5" -> "expression 8";
"ID 6" -> "x 6";
"ASSIGN 7" -> ":= 7";
"expression 8" -> "term 9";
"term 9" -> "term 10";
"term 9" -> "TIMES 23";
"term 9" -> "factor 24";
"term 10" -> "factor 11";
"factor 11" -> "LPAREN 12";
"factor 11" -> "expression 13";
"factor 11" -> "RPAREN 22";
"LPAREN 12" -> "( 12";
"expression 13" -> "expression 14";
"expression 13" -> "PLUS 18";
"expression 13" -> "term 19";
"expression 14" -> "term 15";
"term 15" -> "factor 16";
"factor 16" -> "INT 17";
"INT 17" -> "1 17";
"PLUS 18" -> "+ 18";
"term 19" -> "factor 20";
"factor 20" -> "ID 21";
"ID 21" -> "y 21";
"RPAREN 22" -> ") 22";
"TIMES 23" -> "* 23";
"factor 24" -> "LPAREN 25";
"factor 24" -> "expression 26";
"factor 24" -> "RPAREN 35";
"LPAREN 25" -> "( 25";
"expression 26" -> "expression 27";
"expression 26" -> "PLUS 31";
"expression 26" -> "term 32";
"expression 27" -> "term 28";
"term 28" -> "factor 29";
"factor 29" -> "INT 30";
"INT 30" -> "1 30";
"PLUS 31" -> "+ 31";
"term 32" -> "factor 33";
"factor 33" -> "ID 34";
"ID 34" -> "z 34";
"RPAREN 35" -> ") 35";
"newcommand 37" -> "assignment 38";
"assignment 38" -> "ID 39";
"assignment 38" -> "ASSIGN 40";
"assignment 38" -> "expression 41";
"ID 39" -> "z 39";
"ASSIGN 40" -> ":= 40";
"expression 41" -> "expression 42";
"expression 41" -> "PLUS 51";
"expression 41" -> "term 52";
"expression 42" -> "expression 43";
"expression 42" -> "PLUS 47";
"expression 42" -> "term 48";
"expression 43" -> "term 44";
"term 44" -> "factor 45";
"factor 45" -> "ID 46";
"ID 46" -> "x 46";
"PLUS 47" -> "+ 47";
"term 48" -> "factor 49";
"factor 49" -> "ID 50";
"ID 50" -> "y 50";
"PLUS 51" -> "+ 51";
"term 52" -> "factor 53";
"factor 53" -> "ID 54";
"ID 54" -> "z 54";
"newcommand 56" -> "assignment 57";
"assignment 57" -> "ID 58";
"assignment 57" -> "ASSIGN 59";
"assignment 57" -> "expression 60";
"ID 58" -> "y 58";
"ASSIGN 59" -> ":= 59";
"expression 60" -> "expression 61";
"expression 60" -> "MINUS 65";
"expression 60" -> "term 66";
"expression 61" -> "term 62";
"term 62" -> "factor 63";
"factor 63" -> "ID 64";
"ID 64" -> "y 64";
"MINUS 65" -> "- 65";
"term 66" -> "factor 67";
"factor 67" -> "INT 68";
"INT 68" -> "2 68";
}
