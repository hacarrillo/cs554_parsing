strict digraph  {
"command 1";
"command 2";
"command 3";
"newcommand 4";
"assignment 5";
"ID 6";
"b 6";
"ASSIGN 7";
":= 7";
"expression 8";
"term 9";
"factor 10";
"INT 11";
"0 11";
"SEMICOLON 12";
"newcommand 13";
"assignment 14";
"ID 15";
"a 15";
"ASSIGN 16";
":= 16";
"expression 17";
"term 18";
"factor 19";
"INT 20";
"1 20";
"SEMICOLON 21";
"newcommand 22";
"WHILE 23";
"while 23";
"bool 24";
"newbool 25";
"fbool 26";
"expression 27";
"term 28";
"factor 29";
"ID 30";
"a 30";
"LESS 31";
"< 31";
"expression 32";
"term 33";
"factor 34";
"INT 35";
"10 35";
"DO 36";
"do 36";
"command 37";
"command 38";
"newcommand 39";
"IF 40";
"if 40";
"bool 41";
"newbool 42";
"fbool 43";
"expression 44";
"term 45";
"factor 46";
"ID 47";
"a 47";
"EQUAL 48";
"= 48";
"expression 49";
"term 50";
"factor 51";
"INT 52";
"2 52";
"THEN 53";
"then 53";
"command 54";
"newcommand 55";
"assignment 56";
"ID 57";
"b 57";
"ASSIGN 58";
":= 58";
"expression 59";
"expression 60";
"term 61";
"factor 62";
"ID 63";
"b 63";
"MINUS 64";
"- 64";
"term 65";
"factor 66";
"ID 67";
"a 67";
"ELSE 68";
"else 68";
"command 69";
"newcommand 70";
"assignment 71";
"ID 72";
"b 72";
"ASSIGN 73";
":= 73";
"expression 74";
"expression 75";
"term 76";
"factor 77";
"ID 78";
"b 78";
"PLUS 79";
"+ 79";
"term 80";
"factor 81";
"ID 82";
"a 82";
"FI 83";
"fi 83";
"SEMICOLON 84";
"newcommand 85";
"OD 86";
"od 86";
"SEMICOLON 87";
"newcommand 88";
"command 1" -> "command 2";
"command 1" -> "SEMICOLON 21";
"command 1" -> "newcommand 22";
"command 2" -> "command 3";
"command 2" -> "SEMICOLON 12";
"command 2" -> "newcommand 13";
"command 3" -> "newcommand 4";
"newcommand 4" -> "assignment 5";
"assignment 5" -> "ID 6";
"assignment 5" -> "ASSIGN 7";
"assignment 5" -> "expression 8";
"ID 6" -> "b 6";
"ASSIGN 7" -> ":= 7";
"expression 8" -> "term 9";
"term 9" -> "factor 10";
"factor 10" -> "INT 11";
"INT 11" -> "0 11";
"newcommand 13" -> "assignment 14";
"assignment 14" -> "ID 15";
"assignment 14" -> "ASSIGN 16";
"assignment 14" -> "expression 17";
"ID 15" -> "a 15";
"ASSIGN 16" -> ":= 16";
"expression 17" -> "term 18";
"term 18" -> "factor 19";
"factor 19" -> "INT 20";
"INT 20" -> "1 20";
"newcommand 22" -> "WHILE 23";
"newcommand 22" -> "bool 24";
"newcommand 22" -> "DO 36";
"newcommand 22" -> "command 37";
"newcommand 22" -> "OD 86";
"WHILE 23" -> "while 23";
"bool 24" -> "newbool 25";
"newbool 25" -> "fbool 26";
"fbool 26" -> "expression 27";
"fbool 26" -> "LESS 31";
"fbool 26" -> "expression 32";
"expression 27" -> "term 28";
"term 28" -> "factor 29";
"factor 29" -> "ID 30";
"ID 30" -> "a 30";
"LESS 31" -> "< 31";
"expression 32" -> "term 33";
"term 33" -> "factor 34";
"factor 34" -> "INT 35";
"INT 35" -> "10 35";
"DO 36" -> "do 36";
"command 37" -> "command 38";
"command 37" -> "SEMICOLON 84";
"command 37" -> "newcommand 85";
"command 38" -> "newcommand 39";
"newcommand 39" -> "IF 40";
"newcommand 39" -> "bool 41";
"newcommand 39" -> "THEN 53";
"newcommand 39" -> "command 54";
"newcommand 39" -> "ELSE 68";
"newcommand 39" -> "command 69";
"newcommand 39" -> "FI 83";
"IF 40" -> "if 40";
"bool 41" -> "newbool 42";
"newbool 42" -> "fbool 43";
"fbool 43" -> "expression 44";
"fbool 43" -> "EQUAL 48";
"fbool 43" -> "expression 49";
"expression 44" -> "term 45";
"term 45" -> "factor 46";
"factor 46" -> "ID 47";
"ID 47" -> "a 47";
"EQUAL 48" -> "= 48";
"expression 49" -> "term 50";
"term 50" -> "factor 51";
"factor 51" -> "INT 52";
"INT 52" -> "2 52";
"THEN 53" -> "then 53";
"command 54" -> "newcommand 55";
"newcommand 55" -> "assignment 56";
"assignment 56" -> "ID 57";
"assignment 56" -> "ASSIGN 58";
"assignment 56" -> "expression 59";
"ID 57" -> "b 57";
"ASSIGN 58" -> ":= 58";
"expression 59" -> "expression 60";
"expression 59" -> "MINUS 64";
"expression 59" -> "term 65";
"expression 60" -> "term 61";
"term 61" -> "factor 62";
"factor 62" -> "ID 63";
"ID 63" -> "b 63";
"MINUS 64" -> "- 64";
"term 65" -> "factor 66";
"factor 66" -> "ID 67";
"ID 67" -> "a 67";
"ELSE 68" -> "else 68";
"command 69" -> "newcommand 70";
"newcommand 70" -> "assignment 71";
"assignment 71" -> "ID 72";
"assignment 71" -> "ASSIGN 73";
"assignment 71" -> "expression 74";
"ID 72" -> "b 72";
"ASSIGN 73" -> ":= 73";
"expression 74" -> "expression 75";
"expression 74" -> "PLUS 79";
"expression 74" -> "term 80";
"expression 75" -> "term 76";
"term 76" -> "factor 77";
"factor 77" -> "ID 78";
"ID 78" -> "b 78";
"PLUS 79" -> "+ 79";
"term 80" -> "factor 81";
"factor 81" -> "ID 82";
"ID 82" -> "a 82";
"FI 83" -> "fi 83";
"OD 86" -> "od 86";
}
